<UserControl x:Name="TagTreeViewUserControl"
    x:Class="CacheEditor.Components.TagTree.TagTreeView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:EpsilonBehaviors="clr-namespace:EpsilonLib.Behaviors;assembly=EpsilonLib"
    xmlns:EpsilonTreeModels="clr-namespace:EpsilonLib.Shell.TreeModels;assembly=EpsilonLib"
    xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock"
    xmlns:local="clr-namespace:CacheEditor.Components.TagTree">
    
    <UserControl.Resources>
        <xcad:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />

        <DrawingImage x:Key="FolderOpened">
            <DrawingImage.Drawing>
                <DrawingGroup>
                    <DrawingGroup.Children>
                        <GeometryDrawing
                            Brush="#00FFFFFF"
                            Geometry="F1M0,0L16,0 16,16 0,16z" />
                        <GeometryDrawing
                            Brush="#FFDCB67A"
                            Geometry="F1M1,3L1,12C1,12.97,1.94,12.984,1.997,12.984L2,12.984 2,3 8,3 9,5 13,5 13,8 4,8 2,13 13,13 15,8 14,8 14,5C14,4,12.764,4,13,4L9.5,4 8.5,2 2,2C2,2,1,2,1,3" />
                    </DrawingGroup.Children>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        
        <DrawingImage x:Key="FolderClosed">
            <DrawingImage.Drawing>
                <DrawingGroup>
                    <DrawingGroup.Children>
                        <GeometryDrawing
                            Brush="#00FFFFFF"
                            Geometry="F1M0,0L16,0 16,16 0,16z" />
                        <GeometryDrawing
                            Brush="#FFDBB679"
                            Geometry="F1M2,3L8.374,3 8.874,4 2,4z M13.496,4L10,4 9.992,4 8.992,2 1.5,2C1.225,2,1,2.224,1,2.5L1,12.5C1,12.776,1.225,13,1.5,13L13.496,13C13.773,13,13.996,12.776,13.996,12.5L13.996,4.5C13.996,4.224,13.773,4,13.496,4" />
                    </DrawingGroup.Children>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        
        <DrawingImage x:Key="Document">
            <DrawingImage.Drawing>
                <DrawingGroup>
                    <DrawingGroup.Children>
                        <GeometryDrawing
                            Brush="#00FFFFFF"
                            Geometry="F1M16,16L0,16 0,0 16,0z" />
                        <GeometryDrawing
                            Brush="#FFFFFFFF"
                            Geometry="F1M12,13L4,13 4,3 9,3 9,6 12,6z M9.641,2L3.964,2C3.964,2,3,2,3,3L3,13C3,14,3.965,14,3.965,14L11.965,14C12.965,14,13,13,13,13L13,5z" />
                        <GeometryDrawing
                            Brush="#00FFFFFF"
                            Geometry="F1M4,3L9,3 9,6 12,6 12,13 4,13z" />
                    </DrawingGroup.Children>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>

        <Style x:Key="TagTreeSearchBoxStyle" TargetType="{x:Type TextBoxBase}">
            <Setter Property="Background" Value="{DynamicResource SearchBoxBackground}" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="AllowDrop" Value="true" />
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate />
                </Setter.Value>
            </Setter>
            <Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu>
                        <MenuItem Command="Cut" Header="Cut" Visibility="{Binding Path=IsEnabled, 
                            RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                        <MenuItem Command="Copy" Header="Copy" Visibility="{Binding Path=IsEnabled, 
                            RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                        <MenuItem Command="Paste" Header="Paste" />
                    </ContextMenu>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Border x:Name="border"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="0"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost"
                                    Focusable="false"
                                    HorizontalScrollBarVisibility="Hidden"
                                    VerticalScrollBarVisibility="Hidden" />
                                <TextBlock x:Name="PlaceholderText"
                                    Margin="7,2,2,2"
                                    VerticalAlignment="Center"
                                    FontSize="{TemplateBinding FontSize}"
                                    Foreground="{DynamicResource ForegroundDark}"
                                    IsHitTestVisible="False"
                                    Text="{TemplateBinding Tag}"
                                    Visibility="Hidden" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Opacity" Value="0.56" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource MouseOver}" />
                            </Trigger>
                            <Trigger Property="TextBox.Text" Value="">
                                <Setter TargetName="PlaceholderText" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource MouseOver}" />
                                <Setter TargetName="PlaceholderText" Property="Visibility" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="Red" />
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                        <Condition Property="IsSelectionActive" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        
    </UserControl.Resources>
    
    <DockPanel x:Name="TagTreeDockPanel">
        
        <TextBox x:Name="SearchBox"
            Style="{StaticResource TagTreeSearchBoxStyle}"
            Margin="0,-4,0,0"
            Padding="2,0,0,0"
            VerticalContentAlignment="Center"
            Height="25"
            DockPanel.Dock="Top"
            FontSize="13"
            Tag="Search..."
            Text="{Binding FilterText, UpdateSourceTrigger=PropertyChanged}" />
        
        <TreeView x:Name="TagTree"
            TextOptions.TextFormattingMode="Ideal"
            EpsilonBehaviors:ContextMenuBehavior.Menu="{Binding ContextMenu}"
            EpsilonTreeModels:TreeViewBehavior.Model="{Binding}"
            BorderThickness="0"
            PreviewMouseRightButtonDown="TreeView_PreviewMouseRightButtonDown"
            VirtualizingPanel.IsVirtualizing="True"
            VirtualizingPanel.VirtualizationMode="Recycling">
            <TreeView.Resources>
                <HierarchicalDataTemplate
                    DataType="{x:Type local:TagTreeFolderNode}"
                    ItemsSource="{Binding Children}">
                    <StackPanel Orientation="Horizontal">
                        <Image x:Name="Icon"
                            Margin="0,0,3,0"
                            Source="{StaticResource FolderClosed}" />
                        <TextBlock Text="{Binding Text}" />
                    </StackPanel>
                    <HierarchicalDataTemplate.Triggers>
                        <DataTrigger
                            Binding="{Binding IsExpanded}"
                            Value="True">
                            <Setter TargetName="Icon" Property="Image.Source" Value="{StaticResource FolderOpened}" />
                        </DataTrigger>
                    </HierarchicalDataTemplate.Triggers>
                </HierarchicalDataTemplate>
                
                <DataTemplate DataType="{x:Type local:TagTreeTagNode}">
                    <StackPanel Orientation="Horizontal">
                        <Image x:Name="Icon"
                            Margin="0,0,3,0"
                            Source="{StaticResource Document}" />
                        <TextBlock
                            Text="{Binding Text}"
                            ToolTip="{Binding Text}"
                            Margin="-1,-1,3,1"/>
                    </StackPanel>
                </DataTemplate>

                <HierarchicalDataTemplate
                    DataType="{x:Type local:TagTreeGroupNode}"
                    ItemsSource="{Binding Children}">
                    <StackPanel Orientation="Horizontal">
                        <Image x:Name="Icon"
                            Margin="0,0,3,0"
                            Source="{StaticResource FolderClosed}" />
                        <TextBlock
                            Text="{Binding Text}"
                            Margin="0,-1,3,0"/>
                    </StackPanel>
                    <HierarchicalDataTemplate.Triggers>
                        <DataTrigger
                            Binding="{Binding IsExpanded}"
                            Value="True">
                            <Setter TargetName="Icon" Property="Image.Source" Value="{StaticResource FolderOpened}" />
                        </DataTrigger>
                    </HierarchicalDataTemplate.Triggers>
                </HierarchicalDataTemplate>
                
            </TreeView.Resources>
            
            <TreeView.ItemContainerStyle>
                <Style
                    BasedOn="{StaticResource {x:Type TreeViewItem}}"
                    TargetType="{x:Type TreeViewItem}">
                    <Setter Property="TextElement.Foreground" Value="{DynamicResource ForegroundMedium}" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <EventSetter
                        Event="RequestBringIntoView"
                        Handler="TreeViewItem_RequestBringIntoView" />
                    <EventSetter
                        Event="KeyDown"
                        Handler="TreeViewItem_KeyDown" />
                </Style>
            </TreeView.ItemContainerStyle>
            
        </TreeView>
        
    </DockPanel>
</UserControl>
